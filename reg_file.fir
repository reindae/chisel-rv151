circuit reg_file :
  module reg_file :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip we : UInt<1>, flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip wa : UInt<5>, flip wd : UInt<32>, rd1 : UInt<32>, rd2 : UInt<32>}

    wire _mem_WIRE : UInt<32>[32] @[reg_file.scala 25:28]
    _mem_WIRE[0] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[1] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[2] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[3] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[4] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[5] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[6] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[7] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[8] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[9] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[10] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[11] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[12] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[13] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[14] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[15] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[16] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[17] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[18] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[19] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[20] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[21] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[22] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[23] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[24] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[25] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[26] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[27] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[28] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[29] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[30] <= UInt<32>("h0") @[reg_file.scala 25:28]
    _mem_WIRE[31] <= UInt<32>("h0") @[reg_file.scala 25:28]
    reg mem : UInt<32>[32], clock with :
      reset => (reset, _mem_WIRE) @[reg_file.scala 25:20]
    when io.we : @[reg_file.scala 28:16]
      mem[io.wa] <= io.wd @[reg_file.scala 29:16]
    io.rd1 <= mem[io.rs1] @[reg_file.scala 33:10]
    io.rd2 <= mem[io.rs2] @[reg_file.scala 34:10]

